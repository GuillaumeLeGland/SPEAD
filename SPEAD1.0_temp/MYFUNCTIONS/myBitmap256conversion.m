function [Xmap,zmap,zdat] = myBitmap256conversion(Xdat,keyScaling)

%************************************************************************
% Use: [Xmap] = myBitmap256conversion(Xdat,keyScaling)
%
% keyScaling = 'Linscale' or 'Logscale'
%************************************************************************

%========================================================================
%........................................................................
if strcmp(keyScaling,'Linscale') %LINEAR SCALING.
    %....................................................................
    xmin = min(Xdat(:));
    xmax = max(Xdat(:));
    %....................................................................
    a =   xmin;
    b =  (xmax-xmin) / 256;
    Xmap = (Xdat-a) / b;
    %....................................................................
elseif strcmp(keyScaling,'Logscale') %LOGARITHMIC SCALING.
    %....................................................................
    Inan = find(Xdat==0); %Remove zeros and place NANs instead.
    Xdat(Inan) = nan; 
    %....................................................................
    xmin = min(Xdat(:));
    xmax = max(Xdat(:));
    %....................................................................
    a =  log(xmin);
    b = (log(xmax)-a) / 256; 
    Xmap = (log(Xdat)-a) / b;
    %....................................................................
% $$$     zmap = [0:64:256]; %Bitmap (0-256) units. 
% $$$     zdat = exp((zmap*b)+a); %Original units. 
    %....................................................................
    x1 = 0.1;
    x2 = 0.2;
    x3 = 0.3;
    x4 = 0.4;
    x5 = 0.5;
    %....................................................................
    x = [x1,x3]; %Simetric spacing between ticks [0.1, 0.3, 1.0, 3.0, 10, 30, etc]
    %....................................................................
    antilog10x = 10.^(x);
    %....................................................................
    z1 = log10(antilog10x)*1d-04;
    z2 = log10(antilog10x)*1d-03;
    z3 = log10(antilog10x)*1d-02;
    z4 = log10(antilog10x)*1d-01;
    z5 = log10(antilog10x)*1;
    z6 = log10(antilog10x)*1d01;
    z7 = log10(antilog10x)*1d02;
    z8 = log10(antilog10x)*1d03;
    z9 = log10(antilog10x)*1d04;
    %....................................................................
    z = [z1,z2,z3,z4,z5,z6,z7,z8,z9];
    %....................................................................
    z = z( z >= xmin & z <= xmax ); 
    %....................................................................
    zdat = (round(z*1d6))/1d6; %Original units. 
    %....................................................................
    zmap = (log(zdat)-a) / b; %Bitmap (0-256) units. 
    %....................................................................
end
%........................................................................
%========================================================================
%************************************************************************
return

