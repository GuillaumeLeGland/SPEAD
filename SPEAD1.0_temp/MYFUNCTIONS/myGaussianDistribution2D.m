function [FXY,XAXIS,YAXIS] = myGaussianDistribution2D(xmin,ymin,xmax,ymax,xlag,ylag,xsigma,ysigma,xnbins,ynbins)

%**********************************************************************
%Use: [GaussXY]=myGaussDistribution(xrng,yrng,sigmaPcnt,xlag,ylag);
%
%----------------------------------------------------------------------
%sigmaXci = sqrt(0.01*xmax);
%GaussX = (1/(sigmaX*sqrt(2*pi))) * exp(-(xrng-xmean).^2/(2*sigmaX^2));
%----------------------------------------------------------------------
%**********************************************************************

%===================================================================================
%...................................................................................
% $$$ keymeshcall = 'NDGRID';
% $$$ keymeshcall = 'MESHGRID';
%...................................................................................
%===================================================================================
%...................................................................................
dx = ((xmax-xmin)/(xnbins-1)); 
dy = ((ymax-ymin)/(ynbins-1)); 
%...................................................................................
xaxis = [xmin:dx:xmax]; %[log(um)] 
yaxis = [ymin:dy:ymax]; %[log(um)] 
%...................................................................................
xmean = mean(xaxis) + xlag;
ymean = mean(yaxis) + ylag;
%...................................................................................
% $$$ [XAXIS,YAXIS] = meshgrid(xaxis,yaxis); %Needs to do the transposed orientation.
%...................................................................................
[XAXIS,YAXIS] = ndgrid(xaxis,yaxis); %Transposed orientation of MESHGRID.
%...................................................................................
%===================================================================================

%%%%%%%%%%%%%%%%%%
%GAUSSIAN SURFACE:
%%%%%%%%%%%%%%%%%%
%===================================================================================
%-----------------------------------------------------------------------------------
% fx = 1 / (2*pi*xsigma*ysigma) * exp(-( (XAXIS - xmean).^2 / (2*xsigma^2) + (YAXIS - ymean).^2 / (2*ysigma^2) ));
%-----------------------------------------------------------------------------------
% fx = 1 / (sqrt((2*pi)^ndim*det(covxy))) * exp(-( (XAXIS - xmean).^2 / (2*xsigma^2) + (YAXIS - ymean).^2 / (2*ysigma^2) ));
%-----------------------------------------------------------------------------------
ndim = 2; 
%...................................................................................
covxy = zeros(ndim,ndim); 
%...................................................................................
covxy(1,1) = xsigma.^2; %Autocorrelations.
covxy(2,2) = ysigma.^2; 
%...................................................................................
% $$$ covxy(1,2) = 0.1^2; %Crosscorrelations (keep uncommented for "zero" crosscorrelations).
% $$$ covxy(2,1) = 0.1^2; 
%...................................................................................
% $$$ Ax = 1 / (xsigma*(sqrt(2*pi))); %OKAY.
% $$$ Ay = 1 / (ysigma*(sqrt(2*pi))); %OKAY.
%...................................................................................
Ax  = 1 / (sqrt(2*pi*xsigma*xsigma)); %OKAY.
Ay  = 1 / (sqrt(2*pi*ysigma*ysigma)); %OKAY.
%...................................................................................
Axy = 1 / (sqrt((2*pi)^ndim*det(covxy))); %OKAY.
% $$$ Axy = 1 / (sqrt(2*pi*xsigma*ysigma)).^2; %OKAY.
% $$$ Axy = 1 /      (2*pi*xsigma*ysigma);     %OKAY
%...................................................................................
Bx = (XAXIS-xmean).^2 / (2*xsigma^2);
By = (YAXIS-ymean).^2 / (2*ysigma^2);
%...................................................................................
fx = Ax * exp(-(xaxis-xmean).^2 / (2*xsigma^2));
fy = Ay * exp(-(yaxis-ymean).^2 / (2*ysigma^2));
%...................................................................................
FX = Ax * exp(-Bx);
FY = Ay * exp(-By);
%...................................................................................
FXY001 = FX .* FY; 
%...................................................................................
FXY002 = Axy * exp(-(Bx + By)); 
%...................................................................................
FXY = FXY001;
%...................................................................................
%===================================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%COMPUTE THE INTEGRAL UNDER THE PDF SURFACE TO BE SURE THAT IS EQUAL TO ONE:
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%===================================================================================
%...................................................................................
[sumFXYdxdy] = myintegralpdf2D(FXY,xmax,xmin,ymax,ymin,xnbins,ynbins);
%...................................................................................
dxdy = dx*dy;
%...................................................................................
FXYdxdy = FXY * dxdy;
%...................................................................................
sumFXYdxdy002 = sum(FXYdxdy); 
%...................................................................................
%===================================================================================

%***********************************************************************************
return
%...................................................................................
figure(10)
subplot(2,2,1)
plot(xaxis,fx,'*')
subplot(2,2,2)
plot(yaxis,fy,'*')
subplot(2,2,3)
plot(FXY001(:),FXY002(:),'*')
%...................................................................................
figure(20)
subplot(2,2,1)
surf(XAXIS,YAXIS,FXY001)
shading flat 
mycolorbar
subplot(2,2,2)
surf(XAXIS,YAXIS,FXY002)
shading flat 
mycolorbar
subplot(2,2,3)
pcolor(XAXIS,YAXIS,FXY001)
shading flat 
mycolorbar
subplot(2,2,4)
pcolor(XAXIS,YAXIS,FXY002)
shading flat 
mycolorbar
%...................................................................................
figure(30)
hbar = bar3(FXY);
for k = 1:length(hbar)
    zdata = get(hbar(k),'ZData');
    set(hbar(k),'CData',zdata)
    set(hbar(k),'FaceColor','interp')
    %%set(hbar(k),'LineWidth',[0.5])
    %%set(hbar(k),'Linestyle','none')
    %%set(hbar(k),'EdgeColor',[1 1 1])
end
%...................................................................................
%===================================================================================
%***********************************************************************************
return
