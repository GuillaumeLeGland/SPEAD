function [XarraySmooth,XarraySTD] = myrunmean3D(Xarray,winxyzhalf)

%========================================================================
%........................................................................
X = Xarray;
%........................................................................
[msize,nsize,psize] = size(X);
%........................................................................
%========================================================================
%........................................................................
winxh = winxyzhalf(1);
winyh = winxyzhalf(2);
winzh = winxyzhalf(3);
%........................................................................
winx = (2*winxh) + 1; %window size (it's always a odd number: 3,5,7,...etc)
winy = (2*winyh) + 1;
winz = (2*winzh) + 1;
%........................................................................
winxyz = [winx,winy,winz];
%........................................................................
winconv = ones(winxyz); %window para la convolucion (matriz de 1's).
%........................................................................
pcnt = 1/3; %minimo porcentage de puntos necesario para hacer el smooth.
%........................................................................
ptosmin = floor(pcnt*prod(winxyz)); %que haya al menos un 50% de datos en la widow "xwin * ywin * zwin".
%........................................................................
%========================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%COUNT NUMBER OF DATA POINTS WITHOUT TAKING NANs:
%[NOTE: Use with "mynanconv.m"]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%........................................................................
X01 = zeros(size(X));
Inan = find(isnan(X) == 1); %NAN data.
Inonan = find(isfinite(X) == 1); %non-nan data (zero is a valid value).
X01(Inonan) = 1; %Array with ones where valid data and zero otherwise.
%........................................................................

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%ENLARGE BOUNDARY CONDITIONS:
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%========================================================================
%........................................................................
% $$$ tmpX(:,:,1)           = X(:,:,end); %anado 2 meses mas (Dec ano anterior y Jan ano proximo) para tener C.Frontera.
% $$$ tmpX(:,:,1+psize+1)   = X(:,:,1);
% $$$ tmpX(:,:,1+1:1+psize) = X;
% $$$ %........................................................................
% $$$ tmpX01(:,:,1)           = X01(:,:,end); %anado 2 meses mas (Dec ano anterior y Jan ano proximo) para tener C.Frontera.
% $$$ tmpX01(:,:,1+psize+1)   = X01(:,:,1);
% $$$ tmpX01(:,:,1+1:1+psize) = X01;
%........................................................................
%========================================================================
% $$$ %........................................................................
% $$$ tmpX   = nan*ones(msize+(winx-1)*2,nsize+(winy-1)*2,psize+(winz-1)*2);
% $$$ tmpX01 = nan*ones(msize+(winx-1)*2,nsize+(winy-1)*2,psize+(winz-1)*2);
% $$$ %........................................................................
% $$$ winz
% $$$ winz
% $$$ psize 
% $$$ I = [1+(winz-1):psize-(winz-1)];
% $$$ length(I)
% $$$ whos X
% $$$ pause 
% $$$ %........................................................................
% $$$ tmpX(:,:,[1+(winz-1):psize-(winz-1)]) = X;
% $$$ tmpX(:,:,[1:1+(winz-1)]) = X(:,:,[psize-(winz-1):psize]);
% $$$ tmpX(:,:,[psize-(winz-1):psize]) = X(:,:,[1:1+(winz-1)]);
% $$$ %........................................................................
% $$$ tmpX01(:,:,[1+(winz-1):psize-(winz-1)]) = X01;
% $$$ tmpX01(:,:,[1:1+(winz-1)]) = X01(:,:,[psize-(winz-1):psize]);
% $$$ tmpX01(:,:,[psize-(winz-1):psize]) = X01(:,:,[1:1+(winz-1)]);
% $$$ %........................................................................
%========================================================================
%........................................................................
%........................................................................
%========================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%CONVOLUCION OVER THE DATA ARRAYS:
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%========================================================================
%........................................................................
CX  = nanconvn(tmpX,      winconv,'same');   %E(X)=CX*(1/N)
CXX = nanconvn(tmpX.*tmpX,winconv,'same');   %E(Xexp2)=CXX*(1/N)
%........................................................................
% $$$ CX  = mynanconvn(tmpX,      winconv,'same');   %E(X)=CX*(1/N)
% $$$ CXX = mynanconvn(tmpX.*tmpX,winconv,'same');   %E(Xexp2)=CXX*(1/N)
%........................................................................
%========================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%CONVOLUCION OVER THE ZERO-ONES (NODATA/DATA) MASK-ARRAY:
%(JUST TO COUNT THE NUMBER OF POINTS USED IN THE CONVOL):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%========================================================================
%........................................................................
N = convn(tmpX01,winconv,'same'); %n0 de ptos usados en la convolucion.
%........................................................................
%========================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%REMOVE THE PREVIOUSLY ADDED BORDER CONDITIONS:
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%========================================================================
%........................................................................
N   = N  (:,:,2:psize+1); %remove BC.
CX  = CX (:,:,2:psize+1);
CXX = CXX(:,:,2:psize+1);
%........................................................................
%========================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%COMPUTE RUNNING MEANS (SMOOTHING) AND ASSOCIATED VARIANCES: 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%-----------------------------
%NOTE: VAR(X)=E(X^2)-(E(X))^2
%-----------------------------
%========================================================================
%........................................................................
In = find(N >= ptosmin); %positions(i,j,k) where more than (1/3) of points were taken by the window. 
%........................................................................
EX  = ones(msize,nsize,psize)*nan;  %E(X)
EX2 = ones(msize,nsize,psize)*nan;  %E(X^2)
VX  = ones(msize,nsize,psize)*nan;  %Var(X)
SX  = ones(msize,nsize,psize)*nan;  %Std(X)
%........................................................................
EX (In) = CX (In)./N(In); %E(X) = valores promdio en la window para el X
EX2(In) = CXX(In)./N(In); %E(X^2)
%........................................................................
VX(In) = EX2(In) - EX(In).^2; %var(Xsmooth)
VX(In) = fix(VX(In)*1d8)/1d8; %to avoid negative numbers due to precission issues. 
SX(In) = sqrt(VX(In));
%........................................................................
%========================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%PUT BACK THE NANs WHERE THEY WERE:
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%========================================================================
%........................................................................
X (Inan)=nan; %PARA "globalPDR" PAPER USAR ESTOS!!!
EX(Inan)=nan;
SX(Inan)=nan;
%........................................................................
%========================================================================

%%%%%%%%
%OUTPUT:
%%%%%%%%
%========================================================================
%........................................................................
XarraySmooth = EX;
XarraySTD    = SX;
%........................................................................
%========================================================================
%************************************************************************
return

